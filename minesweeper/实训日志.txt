5.15 准备开始写程序，学习qt cpp的使用
想到通过qpushbutton类来模拟雷区方块
基本游戏框架已经搭建，但是首次点击有可能会踩到雷。
于是又重写了game类，将生成雷区从构造函数中移出，放进主窗口程序中，并创建了一个bool变量，放进game类的私有成员中，用来判断是否已经第一次点击，问题解决。

5.19想实现自动点击相邻联通方块逻辑，学习了bfs的原理，利用了qt自带的qqueque类，但是发现点击后并没有“spread"的效果，只是一下子就翻开了所有方块，想到了Sleep函数，结果还是差不多，只是加上了sleep的时间，然后所有连通块被点击。细细思考了一下，应该是线程阻塞的问题，想到了利用qt的信号槽机制，让计时器以10ms计时，每隔10ms发出一个信号，触发bfs中一次搜索的操作，和方块的点击操作。

5.25实现右键插旗，左右键点击自动翻开周围未标志区域时，发现原生的按钮类不能很好的处理多种复杂的鼠标事件，比如左键点击，左右键同时点击，左键释放之类，于是只能派生一个自定义的按钮类，重写了事件的处理函数，遂解决

5.30实现音效播放，发现音效和之前自己弄的动效不能同时播放，百度了一下，发现是要用多线程来处理，学习了相关知识，利用QThread类，搞定

6.1界面的设计，发现方块不能跟随窗口的缩放保持居中吗，试了很多自带的成员函数，没用，干脆自己计算窗口中心坐标，侦听窗口resize事件，移动方块。

6.10添加雷数计数器，监听game对象中的插旗事件，发出信号，使得计数器改变。

6.11判断游戏胜利逻辑，添加了一个成员变量，表示未翻开方块的数量，当数量等于雷数时，游戏胜利

6.12添加了全局保存的功能，将雷区，方块状态等二维数组写入二进制文件，再次启动时，创建新游戏对象，并读取文件，再让文件清空。